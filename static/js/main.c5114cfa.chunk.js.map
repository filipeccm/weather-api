{"version":3,"sources":["WeatherCard.js","App.js","index.js","images/humidity.svg","images/wind.svg"],"names":["ErrCard","className","WeatherCard","props","cityWeather","cityName","cityCountry","id","tempActual","tempMin","tempMax","onClick","changeToCelsius","celsius","changeToFahrenheit","src","humidityIcon","alt","humidity","windIcon","wind","App","useState","city","setCity","setCelsius","country","weather","tempActualC","tempMinC","tempMaxC","tempMinF","tempMaxF","data","setData","error","setError","useEffect","a","inputData","split","join","fetch","then","res","json","sys","main","Math","round","speed","temp","temp_min","temp_max","tempActualF","catch","err","fetchData","type","value","placeholder","onChange","event","input","target","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c5114cfa.chunk.js","sourcesContent":["import React from 'react';\nimport humidityIcon from './images/humidity.svg';\nimport windIcon from './images/wind.svg';\n\nconst ErrCard = () => {\n  return (\n    <div className=\"error-card\">\n      <h2>Sorry, no city was found</h2>\n    </div>\n  );\n};\n\nconst WeatherCard = (props) => {\n  return (\n    <div className={'card-container' + ' ' + props.cityWeather}>\n      <div className=\"top-container\">\n        <div className=\"location\">\n          <h2>\n            {props.cityName}, {props.cityCountry}\n          </h2>\n        </div>\n        <p id=\"weather\">{props.cityWeather}</p>\n      </div>\n      <div className=\"middle-container\">\n        <p id=\"temp-actual\">{props.tempActual}</p>\n        <div id=\"minmax\">\n          <p>\n            min <span className=\"temp-minmax\">{props.tempMin}º</span>{' '}\n            <span id=\"vertical-line\"></span>{' '}\n            <span className=\"temp-minmax\">{props.tempMax}º</span> max\n          </p>\n        </div>\n      </div>\n      <div className={'bottom-container' + ' ' + props.cityWeather}>\n        <div id=\"scale\">\n          <p>scale</p>\n          <div className=\"infos\">\n            <button\n              onClick={props.changeToCelsius}\n              className={\n                props.celsius ? 'selected' + ' ' + props.cityWeather : null\n              }\n            >\n              <span>ºC</span>\n            </button>\n            <button\n              onClick={props.changeToFahrenheit}\n              className={\n                props.celsius ? null : 'selected' + ' ' + props.cityWeather\n              }\n            >\n              <span>ºF</span>\n            </button>\n          </div>\n        </div>\n        <div id=\"humidity\">\n          <p>humidity</p>\n          <div className=\"infos\">\n            <img id=\"humidity-icon\" src={humidityIcon} alt=\"humidity\" />\n            <span>{props.humidity}%</span>\n          </div>\n        </div>\n        <div id=\"wind\">\n          <p>wind</p>\n          <div className=\"infos\">\n            <img id=\"wind-icon\" src={windIcon} alt=\"wind\" />\n            <span>{props.wind}m/s</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { ErrCard, WeatherCard };\n","import React, { useState, useEffect } from 'react';\nimport { WeatherCard, ErrCard } from './WeatherCard';\nimport './style.css';\n\nconst App = () => {\n  const [city, setCity] = useState('');\n  const [celsius, setCelsius] = useState(true);\n  const [data, setData] = useState({\n    country: '',\n    weather: '',\n    tempActualC: '',\n    tempMinC: '',\n    tempMaxC: '',\n    tempMinF: '',\n    tempMaxF: '',\n    humidity: '',\n    wind: '',\n  });\n  const [error, setError] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const inputData = city.split(' ').join('+');\n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${inputData}&appid=16eb512cb5510f2d827e4166a006aaa4`\n      )\n        .then((res) => res.json())\n        .then((res) => {\n          setData({\n            city: city,\n            country: res.sys.country,\n            weather: res.weather[0].main,\n            humidity: res.main.humidity,\n            wind: Math.round(res.wind.speed * 10) / 10,\n            tempActualC: Math.round((res.main.temp - 273.15) * 10) / 10,\n            tempMinC: Math.round((res.main.temp_min - 273.15) * 10) / 10,\n            tempMaxC: Math.round((res.main.temp_max - 273.15) * 10) / 10,\n            tempActualF:\n              Math.round((((res.main.temp - 273.15) * 9) / 5 + 32) * 10) / 10,\n            tempMaxF:\n              Math.round((((res.main.temp_max - 273.15) * 9) / 5 + 32) * 10) /\n              10,\n            tempMinF:\n              Math.round((((res.main.temp_min - 273.15) * 9) / 5 + 32) * 10) /\n              10,\n          });\n          setError(false);\n        })\n        .catch((err) => err && setError(true));\n    };\n    fetchData();\n  }, [city]);\n\n  const handleChange = (event) => {\n    const input = event.target.value;\n    setCity(input);\n  };\n\n  const changeToCelsius = () => {\n    setCelsius(true);\n  };\n\n  const changeToFahrenheit = () => {\n    setCelsius(false);\n  };\n\n  return (\n    <div>\n      <div id=\"container\">\n        <h2 id=\"title\">Weather API</h2>\n        <input\n          className=\"input\"\n          type=\"text\"\n          value={city}\n          placeholder=\"Search for a city\"\n          onChange={handleChange}\n        />\n        {error === false ? (\n          <WeatherCard\n            cityName={data.city}\n            cityWeather={data.weather}\n            cityCountry={data.country}\n            tempActual={\n              celsius ? data.tempActualC + 'ºC' : data.tempActualF + 'ºF'\n            }\n            tempMax={celsius ? data.tempMaxC : data.tempMaxF}\n            tempMin={celsius ? data.tempMinC : data.tempMinF}\n            wind={data.wind}\n            humidity={data.humidity}\n            changeToCelsius={changeToCelsius}\n            changeToFahrenheit={changeToFahrenheit}\n            celsius={celsius}\n          />\n        ) : (\n          <ErrCard />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/humidity.dff0cd2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind.c97bdf48.svg\";"],"sourceRoot":""}